{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport UserInput from \"../components/auth/UserInput\";\nimport SubmitButton from \"../components/auth/SubmitButton\";\nimport axios from \"axios\";\nimport CircleLogo from \"../components/auth/CircleLogo\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AuthContext } from \"../context/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signin = function Signin(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      state = _useContext2[0],\n      setState = _useContext2[1];\n\n  var handleSubmit = function handleSubmit() {\n    var _await$axios$post, data;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n\n            if (!(!email || !password)) {\n              _context.next = 5;\n              break;\n            }\n\n            alert(\"All fields are required\");\n            setLoading(false);\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.post(\"/signin\", {\n              email: email,\n              password: password\n            }));\n\n          case 8:\n            _await$axios$post = _context.sent;\n            data = _await$axios$post.data;\n\n            if (!data.error) {\n              _context.next = 15;\n              break;\n            }\n\n            alert(data.error);\n            setLoading(false);\n            _context.next = 22;\n            break;\n\n          case 15:\n            setState(data);\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@auth\", JSON.stringify(data)));\n\n          case 18:\n            setLoading(false);\n            console.log(\"SIGN IN SUCCESS => \", data);\n            alert(\"Sign in successful\");\n            navigation.navigate(\"Home\");\n\n          case 22:\n            _context.next = 29;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](5);\n            alert(\"Signup failed. Try again.\");\n            console.log(_context.t0);\n            setLoading(false);\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 24]], Promise);\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    contentCotainerStyle: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    children: _jsxs(View, {\n      style: {\n        marginVertical: 100\n      },\n      children: [_jsx(CircleLogo, {}), _jsx(Text, {\n        style: {\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: \"Sign In\"\n      }), _jsx(UserInput, {\n        name: \"EMAIL\",\n        value: email,\n        setValue: setEmail,\n        autoCompleteType: \"email\",\n        keyboardType: \"email-address\"\n      }), _jsx(UserInput, {\n        name: \"PASSWORD\",\n        value: password,\n        setValue: setPassword,\n        secureTextEntry: true,\n        autoComplteType: \"password\"\n      }), _jsx(SubmitButton, {\n        title: \"Sign In\",\n        handleSubmit: handleSubmit,\n        loading: loading\n      }), _jsxs(Text, {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [\"Not yet registered?\", \" \", _jsx(Text, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Signup\");\n          },\n          style: {\n            color: \"ff222\"\n          },\n          children: \"Sign Up\"\n        })]\n      }), _jsx(Text, {\n        onPress: function onPress() {\n          return navigation.navigate(\"ForgotPassword\");\n        },\n        style: {\n          marginTop: 10\n        },\n        children: \"Forgot Password?\"\n      })]\n    })\n  });\n};\n\nexport default Signin;","map":{"version":3,"names":["React","useState","useContext","UserInput","SubmitButton","axios","CircleLogo","KeyboardAwareScrollView","AsyncStorage","AuthContext","Signin","navigation","email","setEmail","password","setPassword","loading","setLoading","state","setState","handleSubmit","alert","post","data","error","setItem","JSON","stringify","console","log","navigate","flex","justifyContent","marginVertical","fontWeight","textAlign","color","marginTop"],"sources":["/home/michee/Documents/link/105_loading/client/screens/Signin.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { View, ScrollView,Text } from \"react-native\";\n// import Text from \"//@kaloraat/react-native-text\";\nimport UserInput from \"../components/auth/UserInput\";\nimport SubmitButton from \"../components/auth/SubmitButton\";\nimport axios from \"axios\";\nimport CircleLogo from \"../components/auth/CircleLogo\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AuthContext } from \"../context/auth\";\n\nconst Signin = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  // context\n  const [state, setState] = useContext(AuthContext);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      alert(\"All fields are required\");\n      setLoading(false);\n      return;\n    }\n    // console.log(\"SIGNINREQUEST => \", name, email, password);\n    try {\n      const { data } = await axios.post(`/signin`, {\n        email,\n        password,\n      });\n      if (data.error) {\n        alert(data.error);\n        setLoading(false);\n      } else {\n        // save in context\n        setState(data);\n        // save response in async storage\n        await AsyncStorage.setItem(\"@auth\", JSON.stringify(data));\n        setLoading(false);\n        console.log(\"SIGN IN SUCCESS => \", data);\n        alert(\"Sign in successful\");\n        // redirect\n        navigation.navigate(\"Home\");\n      }\n    } catch (err) {\n      alert(\"Signup failed. Try again.\");\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <KeyboardAwareScrollView\n      contentCotainerStyle={{\n        flex: 1,\n        justifyContent: \"center\",\n      }}\n    >\n      <View style={{ marginVertical: 100 }}>\n        <CircleLogo />\n        <Text style={{fontWeight:\"bold\",textAlign:\"center\"}}>\n          Sign In\n        </Text>\n\n        <UserInput\n          name=\"EMAIL\"\n          value={email}\n          setValue={setEmail}\n          autoCompleteType=\"email\"\n          keyboardType=\"email-address\"\n        />\n        <UserInput\n          name=\"PASSWORD\"\n          value={password}\n          setValue={setPassword}\n          secureTextEntry={true}\n          autoComplteType=\"password\"\n        />\n\n        <SubmitButton\n          title=\"Sign In\"\n          handleSubmit={handleSubmit}\n          loading={loading}\n        />\n\n        <Text style={{textAlign:\"center\"}}>\n          Not yet registered?{\" \"}\n          <Text onPress={() => navigation.navigate(\"Signup\")} style={{color:\"ff222\"}}>\n            Sign Up\n          </Text>\n        </Text>\n\n        <Text\n          onPress={() => navigation.navigate(\"ForgotPassword\")}\n          // small\n          // center\n          // color=\"orange\"\n          style={{ marginTop: 10, }}\n        >\n          Forgot Password?\n        </Text>\n      </View>\n    </KeyboardAwareScrollView>\n  );\n};\n\nexport default Signin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}