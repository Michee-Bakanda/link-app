{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Signup from \"../../screens/Signup\";\nimport Signin from \"../../screens/Signin\";\nimport Home from \"../../screens/Home\";\nimport { AuthContext } from \"../../context/auth\";\nimport HeaderTabs from \"../../components/nav/HeaderTabs\";\nimport Account from \"../../screens/Account\";\nimport Links from \"../../screens/Links\";\nimport ForgotPassword from \"../../screens/ForgotPassword\";\nimport PostLink from \"../../screens/PostLink\";\nimport LinkView from \"../../screens/LinkView\";\nimport Profile from \"../../screens/Profile\";\nimport TrendingLinks from \"../../screens/TrendingLinks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function ScreensNav() {\n  var _useContext = useContext(AuthContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      state = _useContext2[0],\n      setState = _useContext2[1];\n\n  var authenticated = state && state.token !== \"\" && state.user !== null;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    children: authenticated ? _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          title: \"Links Daily\",\n          headerRight: function headerRight() {\n            return _jsx(HeaderTabs, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Account\",\n        component: Account,\n        options: {\n          headerBackTitle: \"Back\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Links\",\n        component: Links\n      }), _jsx(Stack.Screen, {\n        name: \"PostLink\",\n        component: PostLink,\n        options: {\n          title: \"Post\",\n          headerRight: function headerRight() {\n            return _jsx(HeaderTabs, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"LinkView\",\n        component: LinkView,\n        options: {\n          title: \"\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: Profile,\n        options: function options(_ref) {\n          var _route$params;\n\n          var route = _ref.route;\n          return {\n            title: ((_route$params = route.params) == null ? void 0 : _route$params.name) || \"\",\n            headerTransparent: true,\n            headerBackTitle: \"\"\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"TrendingLinks\",\n        component: TrendingLinks,\n        options: {\n          title: \"\",\n          headerTransparent: true,\n          headerBackTitle: \"\"\n        }\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Signin\",\n        component: Signin,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: Signup,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"ForgotPassword\",\n        component: ForgotPassword,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useContext","createNativeStackNavigator","Signup","Signin","Home","AuthContext","HeaderTabs","Account","Links","ForgotPassword","PostLink","LinkView","Profile","TrendingLinks","Stack","ScreensNav","state","setState","authenticated","token","user","title","headerRight","headerBackTitle","route","params","name","headerTransparent","headerShown"],"sources":["/home/michee/Documents/link/105_loading/client/components/nav/ScreensNav.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Signup from \"../../screens/Signup\";\nimport Signin from \"../../screens/Signin\";\nimport Home from \"../../screens/Home\";\nimport { AuthContext } from \"../../context/auth\";\nimport HeaderTabs from \"../../components/nav/HeaderTabs\";\nimport Account from \"../../screens/Account\";\nimport Links from \"../../screens/Links\";\nimport ForgotPassword from \"../../screens/ForgotPassword\";\nimport PostLink from \"../../screens/PostLink\";\nimport LinkView from \"../../screens/LinkView\";\nimport Profile from \"../../screens/Profile\";\nimport TrendingLinks from \"../../screens/TrendingLinks\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function ScreensNav() {\n  const [state, setState] = useContext(AuthContext);\n\n  const authenticated = state && state.token !== \"\" && state.user !== null;\n\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Home\"\n      // screenOptions={{ headerShown: false }}\n    >\n      {authenticated ? (\n        <>\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: \"Links Daily\",\n              headerRight: () => <HeaderTabs />,\n            }}\n          />\n          <Stack.Screen\n            name=\"Account\"\n            component={Account}\n            options={{\n              headerBackTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen name=\"Links\" component={Links} />\n          <Stack.Screen\n            name=\"PostLink\"\n            component={PostLink}\n            options={{\n              title: \"Post\",\n              headerRight: () => <HeaderTabs />,\n            }}\n          />\n          <Stack.Screen\n            name=\"LinkView\"\n            component={LinkView}\n            options={{\n              title: \"\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={({ route }) => ({\n              title: route.params?.name || \"\",\n              // headerShown: false,\n              headerTransparent: true,\n              headerBackTitle: \"\",\n            })}\n          />\n          <Stack.Screen\n            name=\"TrendingLinks\"\n            component={TrendingLinks}\n            options={{\n              title: \"\",\n              headerTransparent: true,\n              headerBackTitle: \"\",\n            }}\n          />\n        </>\n      ) : (\n        <>\n          <Stack.Screen\n            name=\"Signin\"\n            component={Signin}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Signup\"\n            component={Signup}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"ForgotPassword\"\n            component={ForgotPassword}\n            options={{ headerShown: false }}\n          />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}