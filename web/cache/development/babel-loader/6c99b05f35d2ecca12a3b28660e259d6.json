{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport UserInput from \"../components/auth/UserInput\";\nimport SubmitButton from \"../components/auth/SubmitButton\";\nimport axios from \"axios\";\nimport CircleLogo from \"../components/auth/CircleLogo\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AuthContext } from \"../context/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      visible = _useState8[0],\n      setVisible = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      resetCode = _useState10[0],\n      setResetCode = _useState10[1];\n\n  var _useContext = useContext(AuthContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      state = _useContext2[0],\n      setState = _useContext2[1];\n\n  var handleSubmit = function handleSubmit() {\n    var _await$axios$post, data;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n\n            if (email) {\n              _context.next = 5;\n              break;\n            }\n\n            alert(\"Email is required\");\n            setLoading(false);\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.post(\"/forgot-password\", {\n              email: email\n            }));\n\n          case 8:\n            _await$axios$post = _context.sent;\n            data = _await$axios$post.data;\n\n            if (data.error) {\n              alert(data.error);\n              setLoading(false);\n            } else {\n              setLoading(false);\n              setVisible(true);\n              console.log(\"RESET PASSWORD RES => \", data);\n              alert(\"Enter the password reset code we sent in your email\");\n            }\n\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](5);\n            alert(\"Error sending email. Try again.\");\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 13]], Promise);\n  };\n\n  var handlePasswordReset = function handlePasswordReset() {\n    var _await$axios$post2, data;\n\n    return _regeneratorRuntime.async(function handlePasswordReset$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"/reset-password\", {\n              email: email,\n              password: password,\n              resetCode: resetCode\n            }));\n\n          case 3:\n            _await$axios$post2 = _context2.sent;\n            data = _await$axios$post2.data;\n            console.log(\"RESET PASSWORD => \", data);\n\n            if (data.error) {\n              alert(data.error);\n              setLoading(false);\n            } else {\n              alert(\"Now you can login with your new password\");\n              navigation.navigate(\"Signin\");\n            }\n\n            _context2.next = 14;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            setLoading(false);\n            alert(\"Password reset failed. Try again.\");\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    contentCotainerStyle: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    children: _jsxs(View, {\n      style: {\n        marginVertical: 100\n      },\n      children: [_jsx(CircleLogo, {}), _jsx(Text, {\n        style: {\n          marginBottom: 50,\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: \"Forgot Password\"\n      }), _jsx(UserInput, {\n        name: \"EMAIL\",\n        value: email,\n        setValue: setEmail,\n        autoCompleteType: \"email\",\n        keyboardType: \"email-address\"\n      }), visible && _jsxs(_Fragment, {\n        children: [_jsx(UserInput, {\n          name: \"NEW PASSWORD\",\n          value: password,\n          setValue: setPassword,\n          secureTextEntry: true,\n          autoComplteType: \"password\"\n        }), _jsx(UserInput, {\n          name: \"PASSWORD RESET CODE\",\n          value: resetCode,\n          setValue: setResetCode,\n          secureTextEntry: true\n        })]\n      }), _jsx(SubmitButton, {\n        title: visible ? \"Reset Password\" : \"Request Reset Code\",\n        handleSubmit: visible ? handlePasswordReset : handleSubmit,\n        loading: loading\n      }), _jsx(Text, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Signin\");\n        },\n        small: true,\n        center: true,\n        color: \"orange\",\n        style: {\n          marginTop: 10,\n          textAlign: \"center\"\n        },\n        children: \"Sign In\"\n      })]\n    })\n  });\n};\n\nexport default ForgotPassword;","map":{"version":3,"names":["React","useState","useContext","UserInput","SubmitButton","axios","CircleLogo","KeyboardAwareScrollView","AsyncStorage","AuthContext","ForgotPassword","navigation","email","setEmail","password","setPassword","loading","setLoading","visible","setVisible","resetCode","setResetCode","state","setState","handleSubmit","alert","post","data","error","console","log","handlePasswordReset","navigate","flex","justifyContent","marginVertical","marginBottom","fontWeight","textAlign","marginTop"],"sources":["/home/michee/Documents/link/105_loading/client/screens/ForgotPassword.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { View, ScrollView, Text } from \"react-native\";\n// import Text from \"//@kaloraat/react-native-text\";\nimport UserInput from \"../components/auth/UserInput\";\nimport SubmitButton from \"../components/auth/SubmitButton\";\nimport axios from \"axios\";\nimport CircleLogo from \"../components/auth/CircleLogo\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AuthContext } from \"../context/auth\";\n\nconst ForgotPassword = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [resetCode, setResetCode] = useState(\"\");\n  // context\n  const [state, setState] = useContext(AuthContext);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    if (!email) {\n      alert(\"Email is required\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const { data } = await axios.post(\"/forgot-password\", {\n        email,\n      });\n      if (data.error) {\n        alert(data.error);\n        setLoading(false);\n      } else {\n        setLoading(false);\n        setVisible(true);\n        console.log(\"RESET PASSWORD RES => \", data);\n        alert(\"Enter the password reset code we sent in your email\");\n      }\n    } catch (err) {\n      alert(\"Error sending email. Try again.\");\n      console.log(err);\n    }\n  };\n\n  const handlePasswordReset = async () => {\n    // console.log(\"HANDLE PASSWORD RESET -> \", email, password, resetCode);\n    try {\n      const { data } = await axios.post(\"/reset-password\", {\n        email,\n        password,\n        resetCode,\n      });\n      console.log(\"RESET PASSWORD => \", data);\n      if (data.error) {\n        alert(data.error);\n        setLoading(false);\n      } else {\n        alert(\"Now you can login with your new password\");\n        navigation.navigate(\"Signin\");\n      }\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n      alert(\"Password reset failed. Try again.\");\n    }\n  };\n\n  return (\n    <KeyboardAwareScrollView\n      contentCotainerStyle={{\n        flex: 1,\n        justifyContent: \"center\",\n      }}\n    >\n      <View style={{ marginVertical: 100 }}>\n        <CircleLogo />\n        <Text  style={{ marginBottom: 50,fontWeight:\"bold\",textAlign:\"center\" }}>\n          Forgot Password\n        </Text>\n\n        <UserInput\n          name=\"EMAIL\"\n          value={email}\n          setValue={setEmail}\n          autoCompleteType=\"email\"\n          keyboardType=\"email-address\"\n        />\n\n        {visible && (\n          <>\n            <UserInput\n              name=\"NEW PASSWORD\"\n              value={password}\n              setValue={setPassword}\n              secureTextEntry={true}\n              autoComplteType=\"password\"\n            />\n\n            <UserInput\n              name=\"PASSWORD RESET CODE\"\n              value={resetCode}\n              setValue={setResetCode}\n              secureTextEntry={true}\n            />\n          </>\n        )}\n\n        <SubmitButton\n          title={visible ? \"Reset Password\" : \"Request Reset Code\"}\n          handleSubmit={visible ? handlePasswordReset : handleSubmit}\n          loading={loading}\n        />\n\n        <Text\n          onPress={() => navigation.navigate(\"Signin\")}\n          small\n          center\n          color=\"orange\"\n          style={{ marginTop: 10,textAlign:\"center\" }}\n        >\n          Sign In\n        </Text>\n      </View>\n    </KeyboardAwareScrollView>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}